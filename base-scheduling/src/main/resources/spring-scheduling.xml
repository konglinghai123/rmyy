<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-autowire="byName" default-lazy-init="false">

	<bean id="jobsQuartzScheduler" class="com.ewcms.system.scheduling.generate.quartz.JobsQuartzScheduler">
		<property name="scheduler" ref="quartzScheduler" />
	</bean>

	<bean id="schedulerFactoryProxyTemplate" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="schedule*">PROPAGATION_REQUIRED</prop>
				<prop key="reschedule*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="jobsQuartzSchedulerFactory" parent="schedulerFactoryProxyTemplate">
		<property name="target" ref="jobsQuartzScheduler"></property>
	</bean>
	
	<!--<bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" destroy-method="destroy">-->
	<bean id="quartzScheduler" class="com.ewcms.system.scheduling.generate.quartz.EwcmsSchedulerFactoryBean" lazy-init="false" destroy-method="destroy">
		<property name="dataSource" ref="dataSourceProxy" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="configLocation" value="classpath:/ewcms.quartz.base.properties" />
		<property name="quartzProperties">
			<props> 
				<prop key="org.quartz.scheduler.classLoadHelper.class">org.quartz.simpl.CascadingClassLoadHelper</prop> 
			</props>
		</property>
		<property name="waitForJobsToCompleteOnShutdown" value="false" />
		<property name="autoStartup" value="false" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="taskExecutor" ref="nullTaskExecutor"/>
        <property name="threadExecutor" ref="nullThreadExecutor"/>
	</bean>
	
	<bean id="schedulingFactory" class="com.ewcms.system.scheduling.generate.SchedulingFactory">
		<property name="jobInfoService" ref="jobInfoService" />
		<property name="scheduler" ref="jobsQuartzSchedulerFactory" />
		<property name="validator" ref="jobInfoValidator" />
	</bean>

	<bean id="schedulingProxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<idref bean="schedulingFactory"/>
			</list>
		</property>
	</bean>
	
	<bean id="quartzSchedulerControl" class="com.ewcms.system.scheduling.generate.quartz.QuartzSchedulerControl" depends-on="schedulingProxyFactoryBean" init-method="start">
		<property name="scheduler" ref="quartzScheduler" />
	</bean>
	
	<!-- 
	<bean id="nullTaskExecutor" class="com.ewcms.system.scheduling.generate.quartz.NullTaskExecutor"/>

    <bean id="nullThreadExecutor" class="com.ewcms.system.scheduling.generate.quartz.NullThreadExecutor"/>
	 -->
	 
	<!-- 在没有实现org.quartz.Job的类时，而需要执行定时任务时使用如下配置:
	<bean id="testJob" class="com.ewcms.scheduling.generate.quartz.EwcmsMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref=""/>//引用Spring定义的类名称(二者选其一)
        <property name="targetClass" value=""/>//引用类(二者选其一)
        <property name="targetMethod" value=""/>//调用类中的方法
        <property name="scheduler" ref="quartzScheduler"/>
        <property name="volatility" value="true"/>//在Quartz已不存在
    </bean>
    <bean id="testCronTrigger" class="com.ewcms.scheduling.generate.quartz.EwcmsCronTriggerBean">
        <property name="jobDetail" ref="testJob"/>
        <property name="cronExpression" value="0 0 2 * * ?"/>
    </bean>
    <bean id="testSimpleTrigger" class="com.ewcms.scheduling.generate.quartz.EwcmsSimpleTriggerBean">
        <property name="jobDetail" ref="testJob"/>
        <property name="startDelay" value="0"/>//在启动时运行，使用下面表达式其中之一
        <property name="repeatInterval" value="604800000"/>//每周一次
        <property name="repeatInterval" value="86400000"/>//每天一次
        <property name="repeatInterval" value="3600000"/>//每小时一次
        <property name="repeatInterval" value="60000"/>//每分钟一次
        <property name="repeatInterval" value="1000"/>//每秒一次
    </bean>
    <bean id="testSchedulerTriggers" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="testCronTrigger"/>
                <ref bean="testSimpleTrigger"/>
                <ref bean="OtherTrigger"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="testScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" destroy-method="destroy">
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="schedulerName" value="TestMaintenanceScheduler"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
                <prop key="org.quartz.threadPool.threadCount">2</prop>
                <prop key="org.quartz.threadPool.threadPriority">2</prop>
            </props>
        </property>
        <property name="triggers" ref="testSchedulerTriggers"/>
    </bean>
     -->
</beans>